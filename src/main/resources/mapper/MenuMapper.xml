<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC
        "-//mybtis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="net.stackoverflow.blog.dao.MenuDao">

    <resultMap id="menuMap" type="menu">
        <id property="id" column="id"/>
        <result property="name" column="name"/>
        <result property="url" column="url"/>
        <result property="deleteAble" column="deleteable"/>
        <result property="date" column="date" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
    </resultMap>

    <select id="selectByPage" resultMap="menuMap" resultType="menu">
        select * from menu
        <where>
            <if test="searchMap != null">
                <if test="searchMap.name != null">
                    name = #{searchMap.name}
                </if>
                <if test="searchMap.url != null">
                    and url = #{searchMap.url}
                </if>
                <if test="searchMap.deleteAble != null">
                    and deleteable = #{searchMap.deleteAble}
                </if>
                <if test="searchMap.date != null">
                    and date = #{searchMap.date}
                </if>
            </if>
        </where>
        order by date limit #{start},#{limit}
    </select>

    <select id="selectByCondition" resultMap="menuMap" resultType="menu">
        select * from menu
        <where>
            <if test="name != null">
                name = #{name}
            </if>
            <if test="url != null">
                and url = #{url}
            </if>
            <if test="deleteAble != null">
                and deleteable = #{deleteAble}
            </if>
            <if test="date != null">
                and date = #{date}
            </if>
        </where>
        order by date
    </select>

    <select id="selectById" resultMap="menuMap" resultType="menu">
        select * from menu where id = #{id}
    </select>

    <insert id="insert" parameterType="menu">
        <selectKey keyProperty="id" resultType="string" order="BEFORE">
            select uuid()
        </selectKey>
        insert into menu (id,name,url,deleteable,date)
        values (#{id},#{name},#{url},#{deleteAble},#{date})
    </insert>

    <insert id="batchInsert" parameterType="list">
        insert into menu (id,name,url,deleteable,date)
        values
        <foreach collection="list" item="item" separator=",">
            ((select uuid()),#{item.name},#{item.url},#{item.deleteAble},#{item.date})
        </foreach>
    </insert>

    <delete id="deleteById" parameterType="string">
        delete from menu where id = #{id}
    </delete>

    <delete id="batchDeleteById" parameterType="list">
        delete from menu where id in
        <foreach collection="list" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

    <update id="update" parameterType="menu">
        update menu
        <set>
            <if test="name != null">
                name = #{name},
            </if>
            <if test="url != null">
                url = #{url},
            </if>
            <if test="deleteAble != null">
                deleteable = #{deleteAble},
            </if>
            <if test="date != null">
                date = #{date},
            </if>
        </set>
        where id = #{id}
    </update>

    <update id="batchUpdate" parameterType="list">
        <foreach collection="list" item="item" open="" close="" separator=";">
            update menu
            <set>
                <if test="item.name != null">
                    name = #{item.name},
                </if>
                <if test="item.url != null">
                    url = #{item.url},
                </if>
                <if test="item.deleteAble != null">
                    deleteable = #{item.deleteAble},
                </if>
                <if test="item.date != null">
                    date = #{item.date},
                </if>
            </set>
            where id = #{item.id}
        </foreach>
    </update>

</mapper>